{"version":3,"sources":["components/Loader/Loader.module.css","services/searchImg-api.js","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Loader/Loader.jsx","components/Modal/Modal.jsx","App.js","index.js"],"names":["module","exports","axios","defaults","baseURL","searchQuery","currentPage","perPage","get","then","data","hits","SearchBar","onSubmit","useState","query","setQuery","className","e","preventDefault","currentTarget","reset","type","autoComplete","autoFocus","placeholder","onChange","value","ImageGalleryItem","webformatURL","largeImageURL","src","alt","data-url","ImageGallery","images","onClick","map","id","Button","Loader","styles","spinner","color","height","width","modalRoot","document","querySelector","Modal","onClose","children","useEffect","window","addEventListener","handleKeyDown","removeEventListener","code","createPortal","target","defaultProps","App","setImages","setCurrentPage","setSearchQuery","isLoading","setIsLoading","error","setError","largeImgUrl","setLargeImgUrl","fetchArticles","options","searchImgApi","imgData","prState","scrollTo","top","documentElement","scrollHeight","behavior","catch","finally","shouldRenderLoadMoreBtn","length","Searchbar","nodeName","dataset","url","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4f74b99f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Loader_spinner__3nzKF\"};","import axios from 'axios';\n\nconst API_KEY = '20192065-3084c849aae1164575ffb5a21';\naxios.defaults.baseURL = 'https://pixabay.com/api';\n\nconst fetchImages = ({\n  searchQuery = 'nature',\n  currentPage = 1,\n  perPage = 15,\n}) => {\n  return axios\n    .get(\n      `/?q=${searchQuery}&page=${currentPage}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=${perPage}`,\n    )\n    .then(({ data: { hits } }) => hits);\n};\n\nexport default { fetchImages };\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst SearchBar = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleChange = e => {\n    setQuery(e.currentTarget.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(query);\n    setQuery('');\n    e.currentTarget.reset();\n  };\n\n  return (\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={handleSubmit}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          className=\"SearchForm-input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          onChange={handleChange}\n        />\n      </form>\n    </header>\n  );\n};\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n","import PropTypes from 'prop-types';\n\nconst ImageGalleryItem = ({ webformatURL, largeImageURL }) => {\n  return (\n    <li className=\"ImageGalleryItem\">\n      <img\n        src={webformatURL}\n        alt=\"something went wrong\"\n        className=\"ImageGalleryItem-image\"\n        data-url={largeImageURL}\n      />\n    </li>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  webformatURL: PropTypes.string.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import ImageGalleryItem from '../ImageGalleryItem';\nimport PropTypes from 'prop-types';\n\nconst ImageGallery = ({ images, onClick }) => {\n  return (\n    <ul className=\"ImageGallery\" onClick={onClick}>\n      {images.map(({ id, webformatURL, largeImageURL }) => (\n        <ImageGalleryItem\n          key={id}\n          webformatURL={webformatURL}\n          largeImageURL={largeImageURL}\n        />\n      ))}\n    </ul>\n  );\n};\n\nImageGallery.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ImageGallery;\n","import PropTypes from 'prop-types';\n\nconst Button = ({ onClick }) => {\n  return (\n    <button type=\"button\" className=\"Button\" onClick={onClick}>\n      Load more\n    </button>\n  );\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import Spinner from 'react-loader-spinner';\nimport styles from './Loader.module.css';\n\nconst Loader = () => {\n  return (\n    <Spinner\n      className={styles.spinner}\n      type=\"Oval\"\n      color=\"#3f51b5\"\n      height={50}\n      width={50}\n    />\n  );\n};\n\nexport default Loader;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Modal = ({ onClose, children }) => {\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n\n  const handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  const handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <div className=\"Overlay\" onClick={handleBackdropClick}>\n      <div className=\"Modal\">{children}</div>\n    </div>,\n    modalRoot,\n  );\n};\n\nModal.defaultProps = {\n  children: null,\n};\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  children: PropTypes.node,\n};\n\nexport default Modal;\n","import { useState, useEffect } from 'react';\nimport searchImgApi from './services/searchImg-api';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Button from './components/Button';\nimport Loader from './components/Loader';\nimport Modal from './components/Modal';\n\nfunction App() {\n  const [images, setImages] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [largeImgUrl, setLargeImgUrl] = useState('');\n\n  useEffect(() => {\n    if (!searchQuery) return;\n    fetchArticles();\n  }, [searchQuery]);\n\n  const onChangeQuery = query => {\n    setSearchQuery(query);\n    setImages([]);\n    setCurrentPage(1);\n    setError(null);\n  };\n\n  const fetchArticles = () => {\n    const options = { currentPage, searchQuery };\n    setIsLoading(true);\n\n    searchImgApi\n      .fetchImages(options)\n      .then(hits => {\n        const imgData = hits.map(({ id, webformatURL, largeImageURL }) => ({\n          id,\n          webformatURL,\n          largeImageURL,\n        }));\n        setImages(prState => [...prState, ...imgData]);\n        setCurrentPage(prState => prState + 1);\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: 'smooth',\n        });\n      })\n      .catch(error => setError(error))\n      .finally(() => setIsLoading(false));\n  };\n\n  const openModal = e => {\n    if (e.target.nodeName !== 'IMG') return;\n    setLargeImgUrl(e.target.dataset.url);\n  };\n\n  const closeModal = () => {\n    setLargeImgUrl('');\n  };\n\n  const shouldRenderLoadMoreBtn = images.length > 0 && !isLoading;\n\n  return (\n    <div className=\"App\">\n      <Searchbar onSubmit={onChangeQuery} />\n      {error && <h2>Ой, ошибка, все пропало (((</h2>}\n      <ImageGallery images={images} onClick={openModal} />\n      {isLoading && <Loader />}\n      {shouldRenderLoadMoreBtn && <Button onClick={fetchArticles} />}\n      {largeImgUrl && (\n        <Modal onClose={closeModal}>\n          <img src={largeImgUrl} alt=\"Большое изображение\" />\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}